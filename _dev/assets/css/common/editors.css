code {
  font-family: 'nanoleaf', sans-serif;
  font-size: var(--font-size-xs);
  line-height: var(--font-size-xs-line-height);
}

blockquote {
  margin: 10px 0;
  padding: 8px 16px;
  border-left: 3px solid var(--light-color-two);
  background-color: var(--light-bg-color);
}

blockquote p {
  display: inline;
}

blockquote span {
  display: block;
  margin-top: 10px;
  font-weight: 600;
  text-align: right;
}

blockquote span:before {
  content: "--";
  display: inline-block;
  margin-right: 5px;
  font-weight: normal;
}

pre[data-language] {
  position: relative;
  min-height: 40px;
  margin: 10px 0;
  color: var(--light-bg-color);
  background-color: var(--light-color-one);
  font-family: 'nanoleaf', sans-serif;
  overflow-x: auto;
}

pre[data-language]::before {
  content: attr(data-language);
  position: absolute;
  top: 0;
  right: 0;
  display: block;
  margin: 8px;
  padding: 2px 8px;
  font-size: var(--font-size-xs);
  line-height: var(--font-size-xs-line-height);
  border-radius: var(--tag-border-radius);
  color: var(--light-color-one);
  background-color: var(--light-bg-color);
  opacity: 0;
  transition: opacity 250ms ease-in-out;
  transition-delay: 100ms;
}

pre[data-language]:hover::before {
  opacity: 1;
}

pre.line-numbers {
  counter-reset: line-count 0;
  /* Change from 0 if you want to start the line count from another number */
  padding-left: calc(3ch + 1.5em + 1px);
  /* 3ch gives roughly enough space for numbers up to 1000 */
}

pre.line-numbers .token.line-number {
  display: inline-block;
  min-width: calc(3ch + 1.5em + 1px);
  /* Using min-width rather than width so if numbers do overflow, they are still visible */
  margin-left: calc(-3ch - 1.5em - 1px);
  /* Pull numbers into the "gutter" left by the padding-left up top */
  text-align: right;
  font-variant-numeric: tabular-nums;
  /* Make numbers line up nicely like a monospace font */
  color: #999;
}

pre.line-numbers .token.line-number::before {
  counter-increment: line-count;
  /* Count each line */
  content: counter(line-count);
  /* Show the numbers */
  display: inline-block;
  user-select: none;
  /* Make numbers unselectable so code can be copied and pasted */
  padding-right: 0.75em;
  margin-right: 0.75em;
  border-right: 1px solid;
}

pre.line-numbers .token.function,
pre.line-numbers .token.selector {
  color: #d7ba6e;
}

pre.line-numbers .token.operator,
pre.line-numbers .token.property,
pre.language-html.line-numbers .token.attr-name {
  color: #97d4ff;
}

pre.line-numbers .token.punctuation,
pre.language-html.line-numbers .token.attr-value .token.punctuation.attr-equals {
  color: var(--light-bg-color);
}

pre.line-numbers .token.class-name {
  color: #5ee6bb;
}

pre.line-numbers .token.comment {
  color: #7eb466;
}

pre.line-numbers .token.keyword,
pre.line-numbers .token.boolean,
pre.language-html.line-numbers .token.tag,
pre.language-html.line-numbers .token.punctuation {
  color: #51a9e8;
}

pre.line-numbers .token.string,
pre.language-html.line-numbers .token.attr-value,
pre.language-html.line-numbers .token.attr-value .token.punctuation {
  color: #ce915b;
}